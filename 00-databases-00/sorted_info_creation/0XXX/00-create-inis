echo "Make sure you are running a 64 bit version of mame !"


#remove old good.ini and create a recent one (with emulation="good" check)
echo busy with good.ini
rm good.ini
/opt/retropie/emulators/mame/mame -listdevices|grep ^Driver|cut -d " " -f2|while read driver;do [[ $(/opt/retropie/emulators/mame/mame -listxml $driver|grep "emulation="|cut -d\" -f4) == good ]] && echo $driver;done > good.ini

#remove old model2.ini and create a recent one (no emulation="good" check)
#no check on good or bad rom because we want the info added for both good and preliminary roms
echo busy with model2.ini
rm model2.ini
/opt/retropie/emulators/mame/mame -listdevices|grep ^Driver|cut -d " " -f2|while read driver; do [[ $(/opt/retropie/emulators/mame/mame -listxml $driver) == *sega/model2* ]]&&echo $driver;done > model2.ini

#remove old model3.ini and create a recent one (no emulation="good" check)
#no check on good or bad rom because we want the info added for both good and preliminary roms
echo busy with model3.ini
rm model3.ini
/opt/retropie/emulators/mame/mame -listdevices|grep ^Driver|cut -d " " -f2|while read driver; do [[ $(/opt/retropie/emulators/mame/mame -listxml $driver) == *sega/model3* ]]&&echo $driver;done > model3.ini

#remove no_media.ini and create a recent one (create list with drivers that do not use any media like cartridges, cassettes or floppies etc)
echo busy with no_media.ini
rm no_media.ini
/opt/retropie/emulators/mame/mame -listdevices|grep ^Driver|cut -d " " -f2|while read driver;do [[ $(/opt/retropie/emulators/mame/mame -listmedia $driver) == *\(none\)* ]] && echo $driver;done > no_media.ini

#remove old 90ยบ.ini and create a recent one (no emulation="good" check)
#no check on good or bad rom because we want the info added for both good and preliminary roms
#we can sort on good or preliminary later
echo busy with 90ยบ.ini
rm 90ยบ.ini
/opt/retropie/emulators/mame/mame -listdevices|grep ^Driver|cut -d " " -f2|while read driver; do [[ $(/opt/retropie/emulators/mame/mame -listxml $driver) == *rotate=\"90\"* ]]||[[ $(/opt/retropie/emulators/mame/mame -listxml $driver) == *rotate=\"270\"* ]]&&echo $driver;done > 90ยบ.ini

echo busy with elektronikah.ini
rm elektronikah.ini
manufacturers=()
manufacturers=\
'
'Elektronika'
'
#better command as used with the old classich.ini, it will detect also if parts of the manufacturer is in the manufacturer output of -listxml
#an example is "bootlegElektronika" will also be detected without adding it to the array.
/opt/retropie/emulators/mame/mame -listdevices|awk "/Driver/"|cut -d " " -f2|while read driver; do  readmanufacturer="$(/opt/retropie/emulators/mame/mame -listxml $driver|awk "/manufacturer>/"|sed 's/^[ \t]*//;s/.manufacturer//g;s/>//g;s/<//g;s/ //g;s/'\('//g;s/'\)'//g;s/\///g')"; handheldinfo=$(/opt/retropie/emulators/mame/mame -listxml $driver|awk "/sourcefile=\"handheld/||/tag=\"screen\" type=\"lcd\"/||/tag=\"screen\" type=\"svg\"/"); emulationinfo=$(/opt/retropie/emulators/mame/mame -listxml $driver|awk "/emulation=\"good/");mediainfo=$(/opt/retropie/emulators/mame/mame -listxml $driver|awk "/cartslot/"); for manufacturer in $manufacturers; do [[ $readmanufacturer =~ .*$manufacturer.* ]]&&[[ -n $handheldinfo ]]&&[[ -n $emulationinfo ]]&&[[ -z $mediainfo ]]&&echo $driver; done; done > elektronikah.ini

#remove old gameandwatch.ini and create a recent one (with emulation="good" check)
#check on good emulation is done because with the tutorial the list had only good roms
echo busy with gameandwatch.ini
rm gameandwatch.ini
/opt/retropie/emulators/mame/mame -listdevices|awk '/gnw\_/||/\(Bassmate/'|cut -d " " -f2|while read driver;do [[ $(/opt/retropie/emulators/mame/mame -listxml $driver|grep "emulation="|cut -d\" -f4) == good ]] && echo $driver;done > gameandwatch.ini

#remove old jakks.ini and create a recent one (with emulation="good" check)
#check on good emulation is done because with the tutorial the list had only good roms
echo busy with jakks.ini
rm jakks.ini
/opt/retropie/emulators/mame/mame -listdevices|awk '/\jak\_/'|cut -d " " -f2|while read driver;do [[ $(/opt/retropie/emulators/mame/mame -listxml $driver|grep "emulation="|cut -d\" -f4) == good ]] && echo $driver;done > jakks.ini
#append manual tested preliminary drivers
preliminarydrivers=()
preliminarydrivers=\
'
jak_sdoo
'
for preliminarydriver in $preliminarydrivers
do
[[ -n $(/opt/retropie/emulators/mame/mame -listdevices $preliminarydriver) ]]&&echo $preliminarydriver >> jakks.ini
done
#sort the file
sort -o jakks.ini jakks.ini

#remove old konamih.ini and create a recent one (with emulation="good" check)
#check on good emulation is done because with the tutorial the list had only good roms
#use [] for escaping special char as regex expression
echo busy with konamih.ini
rm konamih.ini
/opt/retropie/emulators/mame/mame -listdevices|awk '/\(Konami\)/||/\(Konami[,]/||/\(handheld\)/'|cut -d " " -f2|while read driver;do [[ $(/opt/retropie/emulators/mame/mame -listxml $driver|grep "emulation="|cut -d\" -f4) == good ]] && echo $driver;done > konamih.ini

#remove old lightgun.ini and create a recent one (no emulation="good" check)
#no check on good or bad rom because we want the info added for both good and preliminary roms
#we can sort on good or preliminary later
#even though lightgun information is available, not all systems can make use of it !
#for more information, have a look over here :
#https://retropie.org.uk/forum/topic/32900/how-to-run-atari-7800-on-lr-mess
echo busy with lightgun.ini
rm lightgun.ini
/opt/retropie/emulators/mame/mame -listdevices|grep ^Driver|cut -d " " -f2|while read driver; do [[ $(/opt/retropie/emulators/mame/mame -listxml $driver) == *lightgun* ]]&&echo $driver;done > lightgun.ini

#remove old neogeo.ini and create a recent one (no emulation="good" check)
#neogeo can be extracted from hash !
#no check on good or bad rom because we want the info added for both good and preliminary roms
#we can sort on good or preliminary later
echo busy with neogeo.ini
rm neogeo.ini
cat /opt/retropie/emulators/mame/hash/neogeo.xml|grep "software name="|cut -d\" -f2|sort > neogeo.ini

#remove old nintendovs.ini and create a recent one (no emulation="good" check)
#no check on good or bad rom because we want the info added for both good and preliminary roms
#we can sort on good or preliminary later
echo busy with nintendovs.ini
rm nintendovs.ini
/opt/retropie/emulators/mame/mame -listdevices|awk '/^Driver/&&/\(Vs. /'|cut -d " " -f2 > nintendovs.ini

#remove old tigerh.ini and create a recent one (with emulation="good" check)
#check on good emulation is done because with the tutorial the list had only good roms
echo busy with tigerh.ini
rm tigerh.ini
/opt/retropie/emulators/mame/mame -listdevices|awk '/^D/&&/\(Tiger/'|cut -d " " -f2|while read driver;do [[ $(/opt/retropie/emulators/mame/mame -listxml $driver|grep "emulation="|cut -d\" -f4) == good ]]&&[[ -n $(/opt/retropie/emulators/mame/mame -listxml $driver| grep sourcefile=\"handheld) ]] && echo $driver;done > tigerh.ini

#remove old tigerrz.ini and create a recent one (with emulation="good" check)
#check on good emulation is done because with the tutorial the list had only good roms
echo busy with tigerrz.ini
rm tigerrz.ini
/opt/retropie/emulators/mame/mame -listdevices|awk '/\(R-Zone/'|cut -d " " -f2|while read driver;do [[ $(/opt/retropie/emulators/mame/mame -listxml $driver|grep "emulation="|cut -d\" -f4) == good ]] && echo $driver;done > tigerrz.ini

##adding epo_tetr and gigpets needs to be fixed (screen is raster !)
#remove old classich.ini and create a recent one (with emulation="good" check)
#check on good emulation is done because with the tutorial the list had only good roms
#here is an array with all the handheld manufacturers which were in the earlier classich.ini
#the information is extracted using the -listxml option with mame and grabbing the correct manufaturer line
#the special charachters and spaces are removed to prevent problems not able to store them correctly in a "cel"
#the checking meganism does the same thing with the special charachters and spaces so they can be compared correctly
echo busy with classich.ini
rm classich.ini
manufacturers=()
manufacturers=\
'
'Bambino'
'Bandai'
'Coleco'
'ColecoKonami'
'Conic'
'Entex'
'Epoch'
'Elektronika'
'Gakken'
'GakkenKonami'
'KmartCorporation'
'Hasbro'
'IdealToyCorporation'
'MattelElectronics'
'MattelElectronicsTeletapeProductions'
'NelsoniclicensedfromNintendo'
'Nelsonic'
'ParkerBrothers'
'TandyCorporation'
'TigerElectronics'
'Tomy'
'Tronica'
'U.S.Games'
'VTech'
'
/opt/retropie/emulators/mame/mame -listdevices|awk "/Driver/"|cut -d " " -f2|while read driver; do  readmanufacturer="$(/opt/retropie/emulators/mame/mame -listxml $driver|awk "/manufacturer>/"|sed 's/^[ \t]*//;s/.manufacturer//g;s/>//g;s/<//g;s/ //g;s/'\('//g;s/'\)'//g;s/\///g')"; handheldinfo=$(/opt/retropie/emulators/mame/mame -listxml $driver|awk "/sourcefile=\"handheld/||/tag=\"screen\" type=\"lcd\"/||/tag=\"screen\" type=\"svg\"/"); emulationinfo=$(/opt/retropie/emulators/mame/mame -listxml $driver|awk "/emulation=\"good/");mediainfo=$(/opt/retropie/emulators/mame/mame -listxml $driver|awk "/cartslot/"); for manufacturer in $manufacturers; do [[ $manufacturer == $readmanufacturer ]]&&[[ -n $handheldinfo ]]&&[[ -n $emulationinfo ]]&&[[ -z $mediainfo ]]&&echo $driver; done; done > classich.ini
#better command just like with creating elektronikah.ini, it will detect also if parts of the manufacturer is in the manufacturer output of -listxml
#an example is "U.S.Games Corporation" will also be detected without adding it to the array.
#however seems there are only a few discutable drivers extra found so keeping the old command for now.
#/opt/retropie/emulators/mame/mame -listdevices|awk "/Driver/"|cut -d " " -f2|while read driver; do  readmanufacturer="$(/opt/retropie/emulators/mame/mame -listxml $driver|awk "/manufacturer>/"|sed 's/^[ \t]*//;s/.manufacturer//g;s/>//g;s/<//g;s/ //g;s/'\('//g;s/'\)'//g;s/\///g')"; handheldinfo=$(/opt/retropie/emulators/mame/mame -listxml $driver|awk "/sourcefile=\"handheld/||/tag=\"screen\" type=\"lcd\"/||/tag=\"screen\" type=\"svg\"/"); emulationinfo=$(/opt/retropie/emulators/mame/mame -listxml $driver|awk "/emulation=\"good/");mediainfo=$(/opt/retropie/emulators/mame/mame -listxml $driver|awk "/cartslot/"); for manufacturer in $manufacturers; do [[ $readmanufacturer =~ .*$manufacturer.* ]]&&[[ -n $handheldinfo ]]&&[[ -n $emulationinfo ]]&&[[ -z $mediainfo ]]&&echo $driver; done; done > classich.ini
#remove selection of drivers
perl -pi -e "s/comparc\n//g" classich.ini
perl -pi -e "s/comparca\n//g" classich.ini
perl -pi -e "s/monkeysee\n//g" classich.ini
perl -pi -e "s/vclock3\n//g" classich.ini
#make sure the tigerh.ini tigerrz.ini are created earlier then classich.ini
#remove tigerh and tigerrz games from the list with this command (old sed command didn't work correctly)
cat tigerh.ini |while read driver;do perl -pi -e "s/$driver\n//g" classich.ini; done
cat tigerrz.ini |while read driver;do perl -pi -e "s/$driver\n//g" classich.ini; done
sort -o classich.ini classich.ini
